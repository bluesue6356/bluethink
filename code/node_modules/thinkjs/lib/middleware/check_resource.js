'use strict';
/**
 * resource check
 * @param  {}            
 * @return {}     []
 */

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _class = function (_think$middleware$bas) {
  (0, _inherits3.default)(_class, _think$middleware$bas);

  function _class() {
    (0, _classCallCheck3.default)(this, _class);
    return (0, _possibleConstructorReturn3.default)(this, _think$middleware$bas.apply(this, arguments));
  }

  /**
   * run
   * @return {Promise} []
   */

  _class.prototype.run = function run() {
    var pathname = this.http.pathname;
    if (!this.config('resource_on') || !pathname || pathname === '/') {
      return null;
    }
    pathname = decodeURIComponent(pathname);
    var reg = this.config('resource_reg');
    if (!reg.test(pathname)) {
      return null;
    }
    var file = think.RESOURCE_PATH + '/' + pathname;
    //resource exist
    if (think.isFile(file)) {
      return file;
    } else {
      return true;
    }
  };

  return _class;
}(think.middleware.base);

exports.default = _class;